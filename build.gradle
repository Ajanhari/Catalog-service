plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.store'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

// Configures Gradle to use the Configuration Processor when building the project
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('springCloudVersion', "2022.0.0")
    set('testcontainersVersion', "1.17.3")
}

bootRun {
    systemProperty 'spring.profiles.active', 'testData'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web' // provides the necessary libraries for building web applications with Spring MVC and includes Tomcat as the default embedded server.
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'     // Provides the necessary libraries to persist data in relational databases using Spring Data and JDBC.
    runtimeOnly 'org.postgresql:postgresql' // Provides a JDBC driver that allows the application to connect to a PostgreSQL database.
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor' // will automatically generate metadata for the new properties and store them in META-INF/spring-configuration-metadata.json when building the project.
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // provides several libraries and utilities for testing applications, including Spring Test, JUnit, AssertJ, and Mockito. Itâ€™s automatically included in every Spring Boot project.
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.testcontainers:postgresql'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

